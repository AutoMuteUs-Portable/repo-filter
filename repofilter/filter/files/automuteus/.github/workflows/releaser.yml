name: releaser

on:
  push:
    tags:
      - "*"

jobs:
  create-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Create release
        if: ${{ !env.ACT }}
        shell: bash
        run: gh release create $TAG --title $TAG
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAG: ${{ github.ref_name }}

  releaser:
    runs-on: ubuntu-latest
    needs: create-release
    strategy:
      matrix:
        target:
          - os: windows
            arch: 386
          
          - os: windows
            arch: amd64
          
          - os: windows
            arch: arm

          - os: windows
            arch: arm64
    env:
      REPOSITORY_NAME: ${{ github.event.repository.name }}
      TAG: ${{ github.ref_name }}
      TARGETOS: ${{ matrix.target.os }}
      TARGETARCH: ${{ matrix.target.arch }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          
      - name: Install xxhash
        if: ${{ !env.ACT }}
        shell: bash
        run: |
          sudo apt-fast update
          sudo apt-fast install -y xxhash
      
      - name: Install xxhash (only on act)
        if: ${{ env.ACT }}
        shell: bash
        run: |
          sudo apt-get update
          sudo apt-get install -y xxhash

      - name: Setup Go
        uses: actions/setup-go@v3
        with:
          go-version: ^1.18.0
      
      - name: Build
        shell: bash
        run: |
          export TAG=$(git describe --tags "$(git rev-list --tags --max-count=1)") && \
          export COMMIT=$(git rev-parse --short HEAD) && \
          CGO_ENABLED=0 \
          GOOS=${TARGETOS} \
          GOARCH=${TARGETARCH} \
          go build -installsuffix 'static' \
          -ldflags="-X main.version=${TAG} -X main.commit=${COMMIT}" \
          -o ../build/automuteus.exe .

          cp -r ./locales/ ../build/locales
          mkdir ../build/storage
          cp ./storage/postgres.sql ../build/storage/postgres.sql
      
      - name: Compress to zip
        shell: bash
        run: |
          pushd ../build/
          zip -r ../${REPOSITORY_NAME}.${TAG}.${TARGETOS}-${TARGETARCH}.zip *
          popd
      
      - name: Calculate checksum
        shell: bash
        run: find ../build/ -type f -print0 | xargs -0 xxhsum -H3 -- | sed "s/XXH3 (\.\.\/build\/\(.\+\)) = \([a-z0-9]\+\)/\2 \1/" > ../${REPOSITORY_NAME}.${TAG}.${TARGETOS}-${TARGETARCH}.checksum.txt
        
      - name: Upload assets to release
        if: ${{ !env.ACT }}
        shell: bash
        run: gh release upload $TAG ../${REPOSITORY_NAME}.${TAG}.${TARGETOS}-${TARGETARCH}.zip ../${REPOSITORY_NAME}.${TAG}.${TARGETOS}-${TARGETARCH}.checksum.txt
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
